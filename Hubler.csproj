<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <Nullable>enable</Nullable>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <SpaProxyServerUrl>https://localhost:44438</SpaProxyServerUrl>
        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
        <ImplicitUsings>enable</ImplicitUsings>
        <DockerDefaultTargetOS>Windows</DockerDefaultTargetOS>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="BCrypt.Net-Core" Version="1.6.0" />
        <PackageReference Include="Dapper" Version="2.1.4" />
        <PackageReference Include="Dapper.Oracle" Version="2.0.3" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="7.0.12" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="7.0.11"/>
        <PackageReference Include="Microsoft.OpenApi" Version="1.6.9" />
        <PackageReference Include="Oracle.ManagedDataAccess.Core" Version="3.21.120" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
        <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="6.5.0" />
        <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.5.0" />
        <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.5.0" />
        <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="7.0.3" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**"/>
        <None Remove="$(SpaRoot)**"/>
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**"/>
        <Content Remove="ClientApp\.angular\**" />
        <None Remove="ClientApp\.angular\**" />
        <None Include="wwwroot\favicon.ico" />
    </ItemGroup>


    <ItemGroup>
      <Folder Include="ClientApp\src\app\auth\" />
      <Folder Include="ClientApp\src\app\service\cashregister-service\" />
      <Folder Include="ClientApp\src\app\service\employee-service\" />
      <Folder Include="ClientApp\src\app\service\logs-service\" />
      <Folder Include="ClientApp\src\app\service\product-service\" />
      <Folder Include="ClientApp\src\app\service\profile-service\" />
      <Folder Include="ClientApp\src\app\service\role-service\" />
      <Folder Include="ClientApp\src\app\service\status-service\" />
      <Folder Include="ClientApp\src\app\service\store-service\" />
      <Folder Include="ClientApp\src\app\service\view-service\" />
      <Folder Include="ClientApp\src\app\service\warehouse-service\" />
    </ItemGroup>


    <ItemGroup>
      <Compile Remove="ClientApp\.angular\**" />
    </ItemGroup>


    <ItemGroup>
      <EmbeddedResource Remove="ClientApp\.angular\**" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE."/>
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..."/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install"/>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration production"/>

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**"/>
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>
